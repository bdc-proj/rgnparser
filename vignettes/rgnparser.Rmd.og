---
title: "rgnparser"
author: "Scott Chamberlain"
date: "`r Sys.Date()`"
output:
  html_document:
    toc: true
    toc_float: true
    theme: readable
vignette: >
  %\VignetteIndexEntry{Introduction to rgnparser}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
library("knitr")
hook_output <- knitr::knit_hooks$get("output")
knitr::knit_hooks$set(output = function(x, options) {
   lines <- options$output.lines
   if (is.null(lines)) {
     return(hook_output(x, options))  # pass to default hook
   }
   x <- unlist(strsplit(x, "\n"))
   more <- "..."
   if (length(lines)==1) {        # first n lines
     if (length(x) > lines) {
       # truncate the output, but add ....
       x <- c(head(x, lines), more)
     }
   } else {
     x <- c(if (abs(lines[1])>1) more else NULL,
            x[lines],
            if (length(x)>lines[abs(length(lines))]) more else NULL
           )
   }
   # paste these lines together
   x <- paste(c(x, ""), collapse = "\n")
   hook_output(x, options)
 })
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

rgnparser: Parse Scientific Names

An R interface to `gnparser` at https://github.com/gnames/gnparser

## Installation

```{r eval=FALSE}
install.packages("rgnparser")
# OR
remotes::install_github("ropensci/rgnparser")
```

```{r setup}
library(rgnparser)
```

## Install gnparser

The command line tool written in Go, gnparser, is required to use this package.

If you want to install gnparser on your own, instructions can be found at the [gnparser repo][gnparser].

There is a helper function in **rgnparser** for downloading and installing gnparser on major
operating systems (macOS, Windows, Linux):

```{r eval=FALSE}
rgnparser::install_gnparser()
```

It installs the latest gnparser version by default, but you can specify which 
version to install. You can also install gnparser outside of R yourself (see above).

## gn_version

gnparser version

```{r}
gn_version()
```

## gn_debug

debug output

```{r eval=FALSE}
gn_debug("Poa")
#> <rgnparser debug>
#> 
#> *** Complete Syntax Tree ***
#> SciName "Poa"
#>  Name "Poa"
#>   SingleName "Poa"
#>    NameUninomial "Poa"
#>     Uninomial "Poa"
#>      UninomialWord "Poa"
#>       CapWord "Poa"
#>        CapWord1 "Poa"
#>         NameUpperChar "P"
#>          UpperChar "P"
#>           UpperASCII "P"
#>         NameLowerChar "o"
#>          LowerChar "o"
#>           LowerASCII "o"
#>         NameLowerChar "a"
#>          LowerChar "a"
#>           LowerASCII "a"
#> 
#> *** Output Syntax Tree ***
#> SciName "Poa"
#>  Name "Poa"
#>   SingleName "Poa"
#>    Uninomial "Poa"
#>     UninomialWord "Poa"
#>  Tail ""
```

## gn_parse_tidy

output a data.frame with more minimal information

```{r}
x <- c("Quadrella steyermarkii (Standl.) Iltis &amp; Cornejo",
  "Parus major Linnaeus, 1788", "Helianthus annuus var. texanus")
gn_parse_tidy(x)
```

It's pretty fast, thanks to gnparser of course

```{r}
n <- 10000L
# get random scientific names from taxize
spp <- taxize::names_list(rank = "species", size = n)
timed <- system.time(gn_parse_tidy(spp))
timed
```

Just `r timed[["elapsed"]]` sec for `r n` names

## gn_parse

output a list of lists with more detailed information

```{r output.lines=1:15}
x <- c("Quadrella steyermarkii (Standl.) Iltis &amp; Cornejo",
  "Parus major Linnaeus, 1788", "Helianthus annuus var. texanus")
gn_parse(x)
```

[gnparser]: https://github.com/gnames/gnparser
